buildscript {
    ext {
        set("jfrogArtifactoryVersion", "4+")
        set("lombokIdVersion", '6.5.0.3')
        set("shadowIdVersion", '7.1.0')
    }
    repositories {
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'idea'
    id "maven-publish"
    id 'checkstyle'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'io.freefair.lombok' version "${lombokIdVersion}"
    id 'jacoco'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
}

ext {
    set("log4j2Version", '2.19.0')
}
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-graphql')
    implementation('org.springframework.boot:spring-boot-starter-jooq')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
//    implementation 'org.liquibase:liquibase-core'
//    implementation('org.apache.httpcomponents:httpclient') { version { require "4.5.9" } }
//    implementation('org.apache.httpcomponents:httpclient') { version { prefer("4.5.14") } }
//    implementation('org.apache.nifi:nifi') { version { "1.19.0" } }
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.2.1'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

checkstyle {
    configFile = project(':').file("checkstyle.xml")
    checkstyleTest.enabled = false
}
checkstyleMain.dependsOn compileJava

task buildZip(type: Zip) {
    archiveExtension.set("jar")
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}
build.dependsOn buildZip

tasks.named('test') {
    useJUnitPlatform()
}
