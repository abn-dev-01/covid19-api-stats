buildscript {
    ext {
        set("jfrogArtifactoryVersion", "4+")
        set("lombokIdVersion", '6.5.0.3')
        set("shadowIdVersion", '7.1.0')
    }
    repositories {
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'idea'
    id "maven-publish"
    id 'checkstyle'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'io.freefair.lombok' version "${lombokIdVersion}"
    id 'jacoco'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

checkstyle {
    configFile = project(':').file("checkstyle.xml")
    checkstyleTest.enabled = false
}
checkstyleMain.dependsOn compileJava

task buildZip(type: Zip) {
    archiveExtension.set("jar")
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}
build.dependsOn buildZip

tasks.named('test') {
    useJUnitPlatform()
}
